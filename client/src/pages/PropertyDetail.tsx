import { useParams } from "wouter";
import { useQuery } from "@tanstack/react-query";
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import LeadForm from "@/components/LeadForm";
import { 
  MapPin, Phone, Share2, Heart, Camera, Maximize2, 
  Car, Wifi, Zap, Droplets, Home, Calendar, User, Ruler
} from "lucide-react";
import type { Property } from "@shared/schema";

export default function PropertyDetail() {
  const { id } = useParams<{ id: string }>();
  const [selectedImage, setSelectedImage] = useState(0);
  const [isFavorite, setIsFavorite] = useState(false);

  const { data: property, isLoading, error } = useQuery<Property>({
    queryKey: [`/api/properties/${id}`],
  });

  if (isLoading) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-accent-orange mx-auto mb-4"></div>
          <p className="text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä–µ–∫—Ç–µ...</p>
        </div>
      </div>
    );
  }

  if (error || !property) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üè†</div>
          <h1 className="text-3xl font-bold text-foreground mb-4">
            –û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
          </h1>
          <p className="text-muted-foreground mb-8">
            –í–æ–∑–º–æ–∂–Ω–æ, –æ–±—ä–µ–∫—Ç –±—ã–ª –ø—Ä–æ–¥–∞–Ω –∏–ª–∏ —Å–Ω—è—Ç —Å –ø—Ä–æ–¥–∞–∂–∏
          </p>
          <Button className="bg-accent text-foreground hover:bg-orange-600">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É
          </Button>
        </div>
      </div>
    );
  }

  const formatPrice = (price: string) => {
    return new Intl.NumberFormat("ru-RU").format(parseFloat(price));
  };

  const formatPricePerMeter = (price: string | null) => {
    if (!price) return "";
    return new Intl.NumberFormat("ru-RU").format(parseFloat(price));
  };

  const getPropertyTypeLabel = (type: string) => {
    const types = {
      apartment: "–ö–≤–∞—Ä—Ç–∏—Ä–∞",
      house: "–î–æ–º",
      commercial: "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è",
      land: "–ó–µ–º–ª—è",
      garage: "–ì–∞—Ä–∞–∂",
      parking: "–ú–∞—à–∏–Ω–æ–º–µ—Å—Ç–æ"
    };
    return types[type as keyof typeof types] || type;
  };

  const getCategoryLabel = (category: string) => {
    const categories = {
      new_building: "–ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞",
      secondary: "–í—Ç–æ—Ä–∏—á–Ω–∞—è",
      rental: "–ê—Ä–µ–Ω–¥–∞"
    };
    return categories[category as keyof typeof categories] || category;
  };

  const amenities = [
    { icon: <Car className="w-5 h-5" />, label: "–ü–∞—Ä–∫–æ–≤–∫–∞" },
    { icon: <Wifi className="w-5 h-5" />, label: "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" },
    { icon: <Zap className="w-5 h-5" />, label: "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ" },
    { icon: <Droplets className="w-5 h-5" />, label: "–í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ" },
  ];

  return (
    <div className="min-h-screen bg-background">
      {/* Image Gallery */}
      <section className="bg-card">
        <div className="container mx-auto px-4 py-8">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-4 max-w-6xl mx-auto">
            {/* Main Image */}
            <div className="lg:col-span-2 relative">
              <img
                src={property.images[selectedImage] || property.images[0] || "https://images.unsplash.com/photo-1545324418-cc1a3fa10c00?ixlib=rb-4.0.3"}
                alt={property.title}
                className="w-full h-96 lg:h-[500px] object-cover rounded-lg"
              />
              <div className="absolute top-4 left-4">
                <Badge className="bg-accent text-foreground">
                  {getCategoryLabel(property.category)}
                </Badge>
              </div>
              <div className="absolute top-4 right-4 flex gap-2">
                <Button
                  size="sm"
                  variant="secondary"
                  onClick={() => setIsFavorite(!isFavorite)}
                  className="bg-white/80 hover:bg-white"
                >
                  <Heart className={`w-4 h-4 ${isFavorite ? "fill-red-500 text-red-500" : ""}`} />
                </Button>
                <Button size="sm" variant="secondary" className="bg-white/80 hover:bg-white">
                  <Share2 className="w-4 h-4" />
                </Button>
                <Button size="sm" variant="secondary" className="bg-white/80 hover:bg-white">
                  <Maximize2 className="w-4 h-4" />
                </Button>
              </div>
              <div className="absolute bottom-4 right-4">
                <Button size="sm" variant="secondary" className="bg-white/80 hover:bg-white">
                  <Camera className="w-4 h-4 mr-2" />
                  {property.images.length} —Ñ–æ—Ç–æ
                </Button>
              </div>
            </div>

            {/* Thumbnail Grid */}
            <div className="grid grid-cols-2 lg:grid-cols-1 gap-2">
              {property.images.slice(0, 4).map((image, index) => (
                <img
                  key={index}
                  src={image}
                  alt={`${property.title} - —Ñ–æ—Ç–æ ${index + 1}`}
                  className={`w-full h-24 lg:h-32 object-cover rounded cursor-pointer transition-opacity ${
                    selectedImage === index ? "opacity-100 ring-2 ring-accent-orange" : "opacity-70 hover:opacity-100"
                  }`}
                  onClick={() => setSelectedImage(index)}
                />
              ))}
              {property.images.length > 4 && (
                <div className="w-full h-24 lg:h-32 bg-muted rounded flex items-center justify-center cursor-pointer hover:bg-muted transition-colors">
                  <span className="text-muted-foreground text-sm">
                    +{property.images.length - 4} —Ñ–æ—Ç–æ
                  </span>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>

      {/* Property Information */}
      <section className="py-8 bg-white">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
            {/* Main Info */}
            <div className="lg:col-span-2">
              <div className="mb-6">
                <h1 className="text-3xl lg:text-4xl font-bold text-foreground mb-4">
                  {property.title}
                </h1>
                <p className="text-muted-foreground flex items-center text-lg">
                  <MapPin className="w-5 h-5 mr-2 text-accent" />
                  {property.address}
                </p>
              </div>

              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
                <Card>
                  <CardContent className="p-4 text-center">
                    <div className="text-2xl font-bold text-accent">
                      {formatPrice(property.price)} ‚ÇΩ
                    </div>
                    <div className="text-sm text-muted-foreground">–¶–µ–Ω–∞</div>
                  </CardContent>
                </Card>

                {property.pricePerMeter && (
                  <Card>
                    <CardContent className="p-4 text-center">
                      <div className="text-2xl font-bold text-foreground">
                        {formatPricePerMeter(property.pricePerMeter)} ‚ÇΩ
                      </div>
                      <div className="text-sm text-muted-foreground">–ó–∞ –º¬≤</div>
                    </CardContent>
                  </Card>
                )}

                <Card>
                  <CardContent className="p-4 text-center">
                    <div className="text-2xl font-bold text-foreground">
                      {parseFloat(property.area)}
                    </div>
                    <div className="text-sm text-muted-foreground">–º¬≤</div>
                  </CardContent>
                </Card>

                {property.rooms && (
                  <Card>
                    <CardContent className="p-4 text-center">
                      <div className="text-2xl font-bold text-foreground">
                        {property.rooms}
                      </div>
                      <div className="text-sm text-muted-foreground">–∫–æ–º–Ω–∞—Ç</div>
                    </CardContent>
                  </Card>
                )}
              </div>

              <Tabs defaultValue="description" className="w-full">
                <TabsList className="grid w-full grid-cols-4">
                  <TabsTrigger value="description">–û–ø–∏—Å–∞–Ω–∏–µ</TabsTrigger>
                  <TabsTrigger value="details">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</TabsTrigger>
                  <TabsTrigger value="amenities">–£–¥–æ–±—Å—Ç–≤–∞</TabsTrigger>
                  <TabsTrigger value="location">–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ</TabsTrigger>
                </TabsList>

                <TabsContent value="description" className="mt-6">
                  <Card>
                    <CardContent className="p-6">
                      <h3 className="text-xl font-semibold text-foreground mb-4">
                        –û–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
                      </h3>
                      <p className="text-muted-foreground leading-relaxed">
                        {property.description}
                      </p>
                      
                      {property.features.length > 0 && (
                        <div className="mt-6">
                          <h4 className="font-semibold text-foreground mb-3">
                            –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
                          </h4>
                          <div className="flex flex-wrap gap-2">
                            {property.features.map((feature, index) => (
                              <Badge key={index} variant="secondary">
                                {feature}
                              </Badge>
                            ))}
                          </div>
                        </div>
                      )}
                    </CardContent>
                  </Card>
                </TabsContent>

                <TabsContent value="details" className="mt-6">
                  <Card>
                    <CardContent className="p-6">
                      <h3 className="text-xl font-semibold text-foreground mb-4">
                        –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                      </h3>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="flex justify-between py-2 border-b border">
                          <span className="text-muted-foreground">–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</span>
                          <span className="font-medium">{getPropertyTypeLabel(property.propertyType)}</span>
                        </div>
                        <div className="flex justify-between py-2 border-b border">
                          <span className="text-muted-foreground">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                          <span className="font-medium">{getCategoryLabel(property.category)}</span>
                        </div>
                        <div className="flex justify-between py-2 border-b border">
                          <span className="text-muted-foreground">–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å:</span>
                          <span className="font-medium">{parseFloat(property.area)} –º¬≤</span>
                        </div>
                        {property.rooms && (
                          <div className="flex justify-between py-2 border-b border">
                            <span className="text-muted-foreground">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:</span>
                            <span className="font-medium">{property.rooms}</span>
                          </div>
                        )}
                        {property.floor && property.totalFloors && (
                          <div className="flex justify-between py-2 border-b border">
                            <span className="text-muted-foreground">–≠—Ç–∞–∂:</span>
                            <span className="font-medium">{property.floor} –∏–∑ {property.totalFloors}</span>
                          </div>
                        )}
                        <div className="flex justify-between py-2 border-b border">
                          <span className="text-muted-foreground">–†–∞–π–æ–Ω:</span>
                          <span className="font-medium">{property.district}</span>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </TabsContent>

                <TabsContent value="amenities" className="mt-6">
                  <Card>
                    <CardContent className="p-6">
                      <h3 className="text-xl font-semibold text-foreground mb-4">
                        –£–¥–æ–±—Å—Ç–≤–∞ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
                      </h3>
                      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                        {amenities.map((amenity, index) => (
                          <div key={index} className="flex items-center gap-3 p-3 bg-secondary rounded-lg">
                            <div className="text-accent">
                              {amenity.icon}
                            </div>
                            <span className="text-sm font-medium text-foreground">
                              {amenity.label}
                            </span>
                          </div>
                        ))}
                      </div>
                    </CardContent>
                  </Card>
                </TabsContent>

                <TabsContent value="location" className="mt-6">
                  <Card>
                    <CardContent className="p-6">
                      <h3 className="text-xl font-semibold text-foreground mb-4">
                        –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
                      </h3>
                      <div className="bg-gray-200 h-64 rounded-lg flex items-center justify-center mb-4">
                        <div className="text-center">
                          <MapPin className="w-12 h-12 text-accent mx-auto mb-2" />
                          <p className="text-muted-foreground">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞</p>
                        </div>
                      </div>
                      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div className="text-center p-4 bg-secondary rounded-lg">
                          <i className="fas fa-subway text-2xl text-blue-500 mb-2"></i>
                          <div className="font-medium text-foreground">–ú–µ—Ç—Ä–æ</div>
                          <div className="text-sm text-muted-foreground">5 –º–∏–Ω –ø–µ—à–∫–æ–º</div>
                        </div>
                        <div className="text-center p-4 bg-secondary rounded-lg">
                          <i className="fas fa-bus text-2xl text-green-500 mb-2"></i>
                          <div className="font-medium text-foreground">–ê–≤—Ç–æ–±—É—Å</div>
                          <div className="text-sm text-muted-foreground">2 –º–∏–Ω –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏</div>
                        </div>
                        <div className="text-center p-4 bg-secondary rounded-lg">
                          <i className="fas fa-car text-2xl text-purple-500 mb-2"></i>
                          <div className="font-medium text-foreground">–ü–∞—Ä–∫–æ–≤–∫–∞</div>
                          <div className="text-sm text-muted-foreground">–í–æ –¥–≤–æ—Ä–µ</div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </TabsContent>
              </Tabs>
            </div>

            {/* Contact Form */}
            <div className="lg:col-span-1">
              <div className="sticky top-8 space-y-6">
                <LeadForm 
                  title="–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"
                  description="–ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º –æ–±—ä–µ–∫—Ç–µ"
                  serviceType="–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –æ–±—ä–µ–∫—Ç"
                  compact
                />

                <Card>
                  <CardHeader>
                    <CardTitle className="text-lg">–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-center gap-3">
                      <img
                        src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&w=400&h=400"
                        alt="–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"
                        className="w-12 h-12 rounded-full object-cover"
                      />
                      <div>
                        <div className="font-medium text-foreground">–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞</div>
                        <div className="text-sm text-muted-foreground">–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∂–∏–ª–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏</div>
                      </div>
                    </div>
                    
                    <div className="space-y-3">
                      <Button className="w-full bg-accent text-foreground hover:bg-orange-600">
                        <Phone className="w-4 h-4 mr-2" />
                        –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                      </Button>
                      <Button variant="outline" className="w-full border-accent-orange text-accent hover:bg-accent hover:text-foreground">
                        –ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp
                      </Button>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardContent className="p-6">
                    <h3 className="font-semibold text-foreground mb-4">
                      –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?
                    </h3>
                    <ul className="space-y-2 text-sm text-muted-foreground">
                      <li>‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑—É–µ–º –ø–æ–∫–∞–∑ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è</li>
                      <li>‚Ä¢ –ü—Ä–æ–≤–µ–¥–µ–º —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É</li>
                      <li>‚Ä¢ –ü–æ–º–æ–∂–µ–º —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∏–ø–æ—Ç–µ–∫–∏</li>
                      <li>‚Ä¢ –°–æ–ø—Ä–æ–≤–æ–¥–∏–º —Å–¥–µ–ª–∫—É –¥–æ –∫–æ–Ω—Ü–∞</li>
                    </ul>
                  </CardContent>
                </Card>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Similar Properties */}
      <section className="py-16 bg-secondary">
        <div className="container mx-auto px-4">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-3xl font-bold text-foreground mb-8">
              –ü–æ—Ö–æ–∂–∏–µ –æ–±—ä–µ–∫—Ç—ã
            </h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {/* Similar properties would be loaded here */}
              <div className="text-center py-16 col-span-full">
                <Home className="w-16 h-16 text-gray-400 mx-auto mb-4" />
                <p className="text-muted-foreground">
                  –ü–æ—Ö–æ–∂–∏–µ –æ–±—ä–µ–∫—Ç—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}

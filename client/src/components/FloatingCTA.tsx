import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Phone } from "lucide-react";
import { cn } from "@/lib/utils";
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip";
import { useFloatingCtaPosition } from "@/hooks/useFloatingCtaPosition";

interface FloatingCTAProps {
  /** –ü–æ—Ä–æ–≥ —Å–∫—Ä–æ–ª–ª–∞ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ */
  scrollThreshold?: number;
  /** –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∑–≤–æ–Ω–∫–∞ */
  phoneNumber?: string;
  /** –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã */
  className?: string;
  /** –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ–≥–¥–∞ (–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–æ–ª–ª) */
  alwaysVisible?: boolean;
  /** –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É –Ω–∞ –º–æ–±–∏–ª–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 120px) */
  mobileBottomOffset?: number;
  /** –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 24px) */
  desktopBottomOffset?: number;
  /** –í–∫–ª—é—á–∏—Ç—å debug —Ä–µ–∂–∏–º */
  debug?: boolean;
  /** –°—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏: 'modern' (–±–µ–ª–∞—è —Å –æ—Ä–∞–Ω–∂–µ–≤–æ–π –≥—Ä–∞–Ω–∏—Ü–µ–π) –∏–ª–∏ 'classic' (–æ—Ä–∞–Ω–∂–µ–≤–∞—è) */
  variant?: 'modern' | 'classic';
}

export default function FloatingCTA({
  scrollThreshold = 500,
  phoneNumber = "+78121234567",
  className,
  alwaysVisible = false,
  mobileBottomOffset = 120,
  desktopBottomOffset = 24,
  debug = false,
  variant = 'modern'
}: FloatingCTAProps) {
  const [isVisible, setIsVisible] = useState(alwaysVisible);
  
  const { position, bottomOffset, isMobile } = useFloatingCtaPosition({
    mobileBottomOffset,
    desktopBottomOffset,
    rightOffset: 24,
    debug
  });

  useEffect(() => {
    if (alwaysVisible) return;

    const handleScroll = () => {
      setIsVisible(window.scrollY > scrollThreshold);
    };

    window.addEventListener("scroll", handleScroll, { passive: true });
    return () => window.removeEventListener("scroll", handleScroll);
  }, [scrollThreshold, alwaysVisible]);

  const handleClick = () => {
    window.location.href = `tel:${phoneNumber}`;
  };

  if (!isVisible) return null;

  if (debug) {
    console.log('üéØ FloatingCTA render:', {
      isVisible,
      isMobile,
      bottomOffset,
      position
    });
  }

  const buttonStyles = variant === 'modern' 
    ? cn(
        // –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å —Å –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º –∏ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –æ–±–≤–æ–¥–∫–æ–π
        "h-14 px-6 rounded-full shadow-2xl",
        "!bg-white !border-3 !border-orange-500",
        "!text-orange-500",
        "hover:!bg-orange-50 hover:!border-orange-600 hover:!text-orange-600",
        "hover:shadow-2xl hover:scale-110",
        "transition-all duration-300 ease-in-out",
        "animate-bounce-slow",
        "flex items-center gap-2",
        "!opacity-100",
        "ring-2 ring-orange-200 ring-opacity-50",
        "text-lg font-bold"
      )
    : cn(
        // –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –æ—Ä–∞–Ω–∂–µ–≤—ã–π —Å—Ç–∏–ª—å
        "bg-accent-orange text-white hover:bg-orange-600",
        "shadow-lg rounded-full flex items-center space-x-2",
        "transition-all duration-200 hover:scale-105 hover:shadow-xl",
        "px-4 py-3 text-sm lg:px-6 lg:py-4 lg:text-base"
      );

  return (
    <div 
      style={position}
      className={cn(
        "transition-all duration-300 ease-in-out animate-fade-in-up",
        className
      )}
    >
      <TooltipProvider>
        <Tooltip>
          <TooltipTrigger asChild>
            <Button 
              onClick={handleClick}
              className={buttonStyles}
              aria-label="–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ - –∑–∞–∫–∞–∑–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"
            >
              <Phone className={variant === 'modern' ? "w-6 h-6 animate-bounce" : "w-4 h-4 lg:w-5 lg:h-5"} />
              <span className="hidden sm:inline font-bold whitespace-nowrap">
                –û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫
              </span>
              <span className="sm:hidden font-bold">
                –ó–≤–æ–Ω–æ–∫
              </span>
            </Button>
          </TooltipTrigger>
          <TooltipContent side="top" className="bg-gray-800 text-white">
            <p className="font-medium">–ù—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è? –ú—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º! üíô</p>
          </TooltipContent>
        </Tooltip>
      </TooltipProvider>
      
      {/* Debug –ø–∞–Ω–µ–ª—å */}
      {debug && (
        <div className="absolute top-full mt-2 left-0 bg-black text-white text-xs p-2 rounded shadow-lg whitespace-nowrap">
          <div>Mobile: {isMobile ? 'YES' : 'NO'}</div>
          <div>Bottom: {bottomOffset}px</div>
          <div>Position: {position.bottom}</div>
          <div>Variant: {variant}</div>
        </div>
      )}
    </div>
  );
}
